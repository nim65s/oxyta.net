version: '3'

networks:
  web:
    external: true

services:
  db:
    image: postgres:10-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_DB=workaround  # nextcloud wants to create the db itself
      - POSTGRES_USER=nextcloud
    env_file:
      - .env
    volumes:
      - ${CHATONS_ROOT_DIR:-/srv/chatons}/${CHATONS_SERVICE:-cloud}/db:/var/lib/postgresql/data

  app:
    build:
      context: ./nextcloud
      args: 
        max_children: ${NEXTCLOUD_MAX_CHILDREN:-default}
    restart: unless-stopped
    environment:
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=nextcloud
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
    env_file:
      - .env
    volumes:
      - ${CHATONS_ROOT_DIR:-/srv/chatons}/${CHATONS_SERVICE:-cloud}/app:/var/www/html

  web:
    build: ./nginx
    restart: unless-stopped
    volumes:
      - ${CHATONS_ROOT_DIR:-/srv/chatons}/${CHATONS_SERVICE:-cloud}/app:/var/www/html:ro
    labels:
      traefik.enable: "true"
      traefik.frontend.rule: "Host: ${CHATONS_SERVICE:-cloud}.${CHATONS_DOMAIN:-localhost}, www.${CHATONS_SERVICE:-cloud}.${CHATONS_DOMAIN:-localhost}"
      traefik.frontend.redirect.permanent: 'true'
      traefik.frontend.redirect.regex: 'https://(.*)/.well-known/(card|cal)dav'
      traefik.frontend.redirect.replacement: 'https://$$1/remote.php/dav/'
    networks:
      - web
      - default

  redis:
    image: redis:alpine
    restart: unless-stopped

